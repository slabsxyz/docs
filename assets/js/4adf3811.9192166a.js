"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[391],{8324:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=r(4848),n=r(8453);const o={sidebar_position:1,customIcon:"fa-solid fa-brain"},a="Intro to architecture",s={id:"architecture/intro",title:"Intro to architecture",description:"Key Management Abstraction (KMA) removes the complexities for users to manage (store, backup/retrieve, rotate, import/export, etc.) private keys in a secure way. The kind of complexities and what security exactly means is discussed as follows:",source:"@site/docs/architecture/intro.md",sourceDirName:"architecture",slug:"/architecture/intro",permalink:"/architecture/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/slabsxyz/docs/tree/main/docs/architecture/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,customIcon:"fa-solid fa-brain"},sidebar:"tutorialSidebar",previous:{title:"Account Circuit",permalink:"/architecture/account-circuit"},next:{title:"Contracts",permalink:"/category/contracts"}},c={},l=[{value:"Complexities to remove",id:"complexities-to-remove",level:2},{value:"Traditional Cryptographic Key management",id:"traditional-cryptographic-key-management",level:3},{value:"Key management in Web3",id:"key-management-in-web3",level:3}];function h(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"intro-to-architecture",children:"Intro to architecture"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Key Management Abstraction (KMA)"})," removes the ",(0,i.jsx)("u",{children:"complexities"})," for users to ",(0,i.jsx)("u",{children:"manage"})," (store, backup/retrieve, rotate, import/export, etc.) private keys in a ",(0,i.jsx)("u",{children:"secure"})," way. The kind of complexities and what security exactly means is discussed as follows:"]}),"\n",(0,i.jsx)(t.h2,{id:"complexities-to-remove",children:"Complexities to remove"}),"\n",(0,i.jsx)(t.p,{children:"Let's first understand how, and in how many layers, is key management complex, achieving at the end a specific definition for key management as we understand it for our solution."}),"\n",(0,i.jsx)(t.h3,{id:"traditional-cryptographic-key-management",children:"Traditional Cryptographic Key management"}),"\n",(0,i.jsxs)(t.p,{children:["Although cryptography is ancient, as a theoretical framework for secure communication in the pressence of adversarial behavior, it was only around ",(0,i.jsx)(t.a,{href:"https://web.archive.org/web/20141030210530/https://cryptocellar.web.cern.ch/cryptocellar/cesg/possnse.pdf",children:"1970 that important ideas"})," around public key infrastructure (PKI) were introduced. PKI is able to push forward a way to protect a whole set of operations, permissions and guarantees over some sensitive resources, all summarized on the ownership of a single private key \u2014 easily verifiable by anyone with the corresponding public key."]}),"\n",(0,i.jsxs)(t.p,{children:["This made clear how ",(0,i.jsx)(t.a,{href:"https://www.wellesu.com/10.1109/49.223881",children:"important key management is"}),", requiring techniques to keep this single private key secure while keeping it stored and operating over it. This is framed as ",(0,i.jsx)(t.strong,{children:"traditional cryptographic key management (KM)"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"key-management-in-web3",children:"Key management in Web3"}),"\n",(0,i.jsx)(t.p,{children:"The concept of KM have evolved in context with Web3: The ones securing this"})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>s});var i=r(6540);const n={},o=i.createContext(n);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);