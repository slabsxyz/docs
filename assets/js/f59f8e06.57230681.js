"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[309],{9954:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=t(4848),n=t(8453);const r={sidebar_position:3,customIcon:"fa-solid fa-brain"},i="Session Store Network",c={id:"concepts/Keystore Network/sessionstore-network",title:"Session Store Network",description:"The Sessionstore network is designed to securely manage and store temporary cryptographic keys that are essential for securing communication in decentralized environments. Unlike permanent keystore networks, which manage long-term keys, Sessionstore focuses on managing short-lived keys\u2014often referred to as session keys.",source:"@site/docs/concepts/Keystore Network/sessionstore-network.md",sourceDirName:"concepts/Keystore Network",slug:"/concepts/Keystore Network/sessionstore-network",permalink:"/concepts/Keystore Network/sessionstore-network",draft:!1,unlisted:!1,editUrl:"https://github.com/slabsxyz/docs/tree/main/docs/concepts/Keystore Network/sessionstore-network.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,customIcon:"fa-solid fa-brain"},sidebar:"tutorialSidebar",previous:{title:"Minimal key-value store blockchain",permalink:"/concepts/Keystore Network/minimal-key-value-store-blockchain copy"},next:{title:"Key Management Abstraction",permalink:"/concepts/glossary-of-terms"}},a={},d=[];function l(e){const s={h1:"h1",p:"p",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"session-store-network",children:"Session Store Network"}),"\n",(0,o.jsx)(s.p,{children:"The Sessionstore network is designed to securely manage and store temporary cryptographic keys that are essential for securing communication in decentralized environments. Unlike permanent keystore networks, which manage long-term keys, Sessionstore focuses on managing short-lived keys\u2014often referred to as session keys."}),"\n",(0,o.jsx)(s.p,{children:"These session keys provide a lightweight and secure way to encrypt data for a specific period of time. Once the session expires, the keys are discarded, ensuring that even if a key is compromised, its utility is limited to the duration of the session. This system is ideal for securing dApp interactions where short-term security is critical."})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var o=t(6540);const n={},r=o.createContext(n);function i(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);